[
{"class":"Hash","name":"==","detail":"==演算子（メソッド）は、2つのハッシュが同じ内容を持つかどうか調べます。ハッシュの各キーと値を比較してすべて同じであればtrue、違いがあればfalseを返します。オブジェクトの比較には、==演算子が使われます。\n\nexample\n\nhash1 = { :a => 1, :b => 2 }\n\nhash2 = { :b => 2.0, :a => 1.0 }\n\nputs hash1 == hash2\n\nputs hash1.equal?(hash2)\n\n出力結果\n\ntrue\nfalse"},
{"class":"Hash","name":"[]","detail":"[]メソッドは、ハッシュから引数のキーに対応する値を取り出して返します。\nkeyのキーがないときは、ハッシュのデフォルト値を返します。ハッシュにデフォルト値が設定されていなければnilを返します。\n\nexample\n\nscores = { \"Alice\" => 50, \"Bob\" => 60, \"Carol\" => 90, \"David\" => 40 }\n\np scores[\"Carol\"]\n\np scores[\"Eve\"]\n\nscores.default = -1\n\np scores[\"Eve\"]\n\n出力結果\n\n90\nnil\n-1"},
{"class":"Hash","name":"[]=","detail":"[]=メソッドは、ハッシュにキーと値のペアを追加します。キーがすでにあれば、そのキーの値を変更します。レシーバ自身を変更するメソッドです。戻り値は右辺の値です。\n\nexample\n\nscores = { \"Alice\" => 50, \"Bob\" => 60, \"Carol\" => 90, \"David\" => 40 }\n\nscores[\"Eve\"] = 75\n\nputs scores[\"Eve\"]\n\nscores[\"Bob\"] = 55\n\nputs scores[\"Bob\"]\n\n出力結果\n\n75\n55"},
{"class":"Hash","name":"assoc","detail":"assocメソッドは、ハッシュから引数と同じキーを順に探し、見つかったらキーと値のペアを配列にして返します。見つからないときはnilを返します。\n引数とキーの比較にはeql?ではなく==が使われます。また、キーが見つからないときは、ハッシュのデフォルト値は使われません。\n\nexample\n\ncapitals = { \"Japan\" => \"Tokyo\", \"Italy\" => \"Roma\", \"China\" => \"Beijing\"}\n\np capitals.assoc(\"Italy\")\n\np capitals.assoc(\"France\")\n\n出力結果[\"Italy\",\"Roma\"]\nnil"},
{"class":"Hash","name":"clear","detail":"clearメソッドは、キーと値をすべて削除し、ハッシュを空にします。レシーバ自身を変更するメソッドです。戻り値はレシーバ自身です。\n\nexample\n\nscores = { \"Alice\" => 50, \"Bob\" => 60, \"Carol\" => 90, \"David\" => 40 }\n\nscores.clear\n\np scores\n\n出力結果\n\n{}"},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
{"class":"Hash","name":"","detail":""},
]